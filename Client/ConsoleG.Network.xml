<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConsoleG.Network</name>
    </assembly>
    <members>
        <member name="T:ConsoleG.Network.InfeNewConsoleHup">
            <summary>
            连接的凭证
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InfeNewConsoleHup.#ctor">
            <summary>
            新建连接密码
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InfeNewConsoleHup.#ctor(System.String,System.String)">
            <summary>
            新建连接密码
            </summary>
            <param name="user">用户</param>
            <param name="pwd">密码</param>
        </member>
        <member name="M:ConsoleG.Network.InfeNewConsoleHup.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            新建连接密码
            </summary>
            <param name="user">用户</param>
            <param name="pwd">密码</param>
            <param name="inp">连接证书</param>
            <param name="uni">指纹</param>
        </member>
        <member name="P:ConsoleG.Network.InfeNewConsoleHup.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InfeNewConsoleHup.Passworld">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InfeNewConsoleHup.IndexProgres">
            <summary>
            证书指纹(由服务器生成)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InfeNewConsoleHup.UnIndex">
            <summary>
            指纹采集码
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerLogUp">
            <summary>
            User Cns(标记为*登录时产生影响)
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerLogUp.#ctor">
            <summary>
            新建操作
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerLogUp.UserSave">
            <summary>
            注册用户
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerLogUp.ServerName">
            <summary>
            服务器名称(*)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerLogUp.InsUSer">
            <summary>
            用户证书保存
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerLogUp.ServerCAI">
            <summary>
            服务器的算法
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerLogUp.ServerInsIndex">
            <summary>
            服务器类型
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SaveServerSocket">
            <summary>
            服务器用户连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.Sender">
            <summary>
            使用者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.USIn">
            <summary>
            证书
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.SenderIndex">
            <summary>
            服务引索
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.SaveObject">
            <summary>
            储存发送类
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.SaveBytes">
            <summary>
            储存发送字节
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SaveServerSocket.SaveTime">
            <summary>
            储存发送时间
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerIns">
            <summary>
            服务器连接凭证操作
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerIns.ServerName">
            <summary>
            服务器名称
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerIns.ServerIndex">
            <summary>
            服务器类型
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerIns.CAIIndex">
            <summary>
            CAI算法
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerIns.UserFA">
            <summary>
            用户绑定
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerIns.UserETCIndex">
            <summary>
            用户的其他证书
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerIns.UserIndex">
            <summary>
            用户的指纹采集
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerIns.MakeOne">
            <summary>
            制作证书
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.ServerIns.DeMake(System.String)">
            <summary>
            解析证书
            </summary>
            <param name="tc"></param>
            <returns></returns>
        </member>
        <member name="T:ConsoleG.Network.ServerUserControl">
            <summary>
            服务器(用户注册)算法登录操作
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerUserControl.#ctor">
            <summary>
            初始化一个值
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerUserControl.#ctor(System.String,System.String,System.String)">
            <summary>
            定义它
            </summary>
            <param name="name"></param>
            <param name="user"></param>
            <param name="pwd"></param>
        </member>
        <member name="P:ConsoleG.Network.ServerUserControl.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerUserControl.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerUserControl.Passworld">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerUserControl.ETC">
            <summary>
            其他绑定
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerUserControl.ETCConSo">
            <summary>
            其他绑定
            </summary>
        </member>
        <member name="T:ConsoleG.Network.UserETCControl">
            <summary>
            其他控制在绑定用户
            </summary>
        </member>
        <member name="P:ConsoleG.Network.UserETCControl.levelAs">
            <summary>
            服务器这个用户等级
            </summary>
        </member>
        <member name="P:ConsoleG.Network.UserETCControl.InGroup">
            <summary>
            属于组
            </summary>
        </member>
        <member name="P:ConsoleG.Network.UserETCControl.ETCControl">
            <summary>
            用户其他操控
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerBackAs">
            <summary>
            服务器标准回答(发送)Class
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.SeverName">
            <summary>
            服务器名称
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.ServerSenderObject">
            <summary>
            服务器的数据类型
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.ServerStatic">
            <summary>
            服务器(回答)状态
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.ServerConnented">
            <summary>
            服务器连接返回
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.ThisName">
            <summary>
            发送者的名称
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.ThisSenderObject">
            <summary>
            发送的数据类型
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerBackAs.SenderLenth">
            <summary>
            发送的字节长度
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SenderReiveSleep">
            <summary>
            占用等待线路
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SenderReiveSleep.Name">
            <summary>
            执行者名称
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SenderReiveSleep.Socket">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SenderReiveSleep.SleepTake">
            <summary>
            占用数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SenderReiveSleep.SenderReiving">
            <summary>
            正在执行
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SenderReiveSleep.ServerBackAs">
            <summary>
            发送头
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SenderReiveSleep.Canel">
            <summary>
            取消操控
            </summary>
        </member>
        <member name="T:ConsoleG.Network.InShowClient.RunTServerFP">
            <summary>
            对服务器新建查询
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.RunTServerFP.#ctor(ConsoleG.Network.NewConsoleNetCY)">
            <summary>
            新建查询
            </summary>
            <param name="cy">服务器必须是连接状态，否则无效</param>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.RunTServerFP.GetServerConnented">
            <summary>
            获取服务器连接状态
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.RunTServerFP.HandleClassSender">
            <summary>
            绑定发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.RunTServerFP.GetBackHandleClassSender">
            <summary>
            获取返回的发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.RunTServerFP.GetBackTime">
            <summary>
            获取返回最后一次时间
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.RunTServerFP.Sender">
            <summary>
            向服务器发送查询
            </summary>
        </member>
        <member name="T:ConsoleG.Network.InShowClient.SearchOpp">
            <summary>
            服务器类查询和服务器接收类的执行
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchOpp.#ctor">
            <summary>
            新建查询机制
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SearchOpp.ObjectEventOppen">
            <summary>
            事件(发送前)操控执行
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SearchOpp.ObjectEventOppenEnd">
            <summary>
            事件(发送后)操控执行
            </summary>
        </member>
        <member name="T:ConsoleG.Network.InShowClient.SearchClass">
            <summary>
            新建查询
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.#ctor(ConsoleG.Network.InShowClient.RunTServerFP)">
            <summary>
            新建查询
            </summary>
            <param name="r">查询服务</param>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SearchClass.CanelControl">
            <summary>
            是否取消操作
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.GetSenderClassFormHandle">
            <summary>
            获取服务器返回的查询类
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.SetSenderClass(ConsoleG.Network.InShowClient.SenderClassForm)">
            <summary>
            绑定发送者
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.SearchSenderInEventEnd">
            <summary>
            通过查询返回者的发送查询类名，执行发送后的事件
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.SearchSenderInEventStart">
            <summary>
            通过查询返回者的发送查询类名，执行发送前的事件
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.GetSearchServer">
            <summary>
            获取查询服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SearchClass.Sender">
            <summary>
            标准的发送执行请求
            </summary>
        </member>
        <member name="T:ConsoleG.Network.InShowClient.SenderClassForm">
            <summary>
            向服务器发送执行指令
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.ControlClass">
            <summary>
            服务器执行类
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.ControlComment">
            <summary>
            对执行说明
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.GetRun">
            <summary>
            获取返回字节
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.GetBytes">
            <summary>
            获取服务器回路
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.GetControlType">
            <summary>
            获取指导操作文本
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.GetException">
            <summary>
            获取失败原因
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowClient.SenderClassForm.SuccessRuned">
            <summary>
            获取是否执行成功
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SenderClassForm.Execute(ConsoleG.Network.NewConsoleNetCY,ConsoleG.Network.InShowClient.RunTServerFP)">
            <summary>
            处理执行
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SenderClassForm.Executing(ConsoleG.Network.NewConsoleNetCY,ConsoleG.Network.InShowClient.RunTServerFP)">
            <summary>
            执行中的处理
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowClient.SenderClassForm.ExecuteOver(ConsoleG.Network.NewConsoleNetCY,ConsoleG.Network.InShowClient.RunTServerFP)">
            <summary>
            发送执行后的处理
            </summary>
            <param name="c"></param>
            <param name="r"></param>
        </member>
        <member name="T:ConsoleG.Network.InShowServer.RunAtAdd">
            <summary>
            类操控
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RunAtAdd.ClassName">
            <summary>
            操控类名称查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RunAtAdd.Execute(ConsoleG.Network.Server.NewConsoleNetSr,ConsoleG.Network.Server.ServerSenderOveEvent,ConsoleG.Network.InShowClient.SenderClassForm)">
            <summary>
            执行查询
            </summary>
            <param name="sr">服务器类本体</param>
            <param name="s">发送者</param>
            <param name="f">发送者请求</param>
            <returns></returns>
        </member>
        <member name="P:ConsoleG.Network.InShowServer.RunAtAdd.BackException">
            <summary>
            对于服务器执行错误返回
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowServer.RunAtAdd.BackSenderClass">
            <summary>
            返回发送者
            </summary>
        </member>
        <member name="T:ConsoleG.Network.InShowServer.RegeditThis">
            <summary>
            注册指令
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RegeditThis.#ctor">
            <summary>
            注册新的指令系统调用
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RegeditThis.Regedit">
            <summary>
            锁定保存写入
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowServer.RegeditThis.RegRuns">
            <summary>
            多指令注册
            </summary>
        </member>
        <member name="T:ConsoleG.Network.InShowServer.RunTAtServer">
            <summary>
            服务器操作
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RunTAtServer.#ctor(ConsoleG.Network.Server.NewConsoleNetSr)">
            <summary>
            新建操作
            </summary>
            <param name="sr">服务程序类,必须使用<see cref="M:ConsoleG.Network.Server.NewConsoleNetSr.StartConnentAnys"/>才可以起作用</param>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RunTAtServer.GetRegeditMD">
            <summary>
            将注册类添加
            </summary>
        </member>
        <member name="M:ConsoleG.Network.InShowServer.RunTAtServer.GetAutuoRegeditMD">
            <summary>
            添加事件自动注册
            </summary>
        </member>
        <member name="P:ConsoleG.Network.InShowServer.RunTAtServer.SetClassControls">
            <summary>
            获取添加操控类
            </summary>
        </member>
        <member name="T:ConsoleG.Network.NewConsoleNetCY">
            <summary>
            连接由NewConsole发出的服务器
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>
            配合Socket连接(服务器默认连接为TCP)
            </summary>
            <param name="addressFamily"></param>
            <param name="socketType"></param>
            <param name="protocolType"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.#ctor">
            <summary>
            使用默认的连接方式(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.GetObjectClass">
            <summary>
            获取在内存中的Class
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ReviewReviceByte">
            <summary>
            接收窗口占用数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ReviewSend">
            <summary>
            发送窗口占用数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.GetThisSocket">
            <summary>
            获取在这个声明的<see cref="T:System.Net.Sockets.Socket"/>对象
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.Name">
            <summary>
            声明标识
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.IDX">
            <summary>
            项目注册排名
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.Server">
            <summary>
            是服务器还是客户端
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.LogUped">
            <summary>
            是否登录
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ThisName">
            <summary>
            发送名
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.BackNoSuccess">
            <summary>
            如果服务器返回非200将跳出操作
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.WaitTime">
            <summary>
            超时时间(超过此时间自动跳出,引发异常)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.WaitContiue">
            <summary>
            服务器等待时间(请在200~10000选择，否则影响系统正常发送)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ByteGetS">
            <summary>
            服务器字节缓冲大小
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ByteToSp">
            <summary>
            每毫秒钟发送字节
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.AddBlind">
            <summary>
            服务器连接的参数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.IPBlind">
            <summary>
            连接服务器参数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.Exception">
            <summary>
            记录在操作时出现的错误
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.IsBackTaskSender">
            <summary>
            当前是否为后台挂载
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.GetSenderByteTitle">
            <summary>
            获取服务器标准发送字节标题
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.GetSenderFileTitle">
            <summary>
            获取服务器标准发送文件标题
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ServerHeaderCon">
            <summary>
            处理的标题标签
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewConsoleNetCY.ServerHeaderConFile">
            <summary>
            处理文件的标题标签
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Connent">
            <summary>
            尝试连接到服务器(不登录)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.LogUp">
            <summary>
            登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Sender(System.Net.Sockets.Socket,System.Net.EndPoint,ConsoleG.Network.ServerBackAs,System.Byte[])">
            <summary>
            指定一个接收者发送
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
            <param name="af"></param>
            <param name="sender"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Sender(System.Net.Sockets.Socket,ConsoleG.Network.ServerBackAs,System.Byte[])">
            <summary>
            指定一个接收者发送
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
            <param name="af"></param>
            <param name="sender"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Sender(ConsoleG.Network.ServerBackAs,System.Byte[])">
            <summary>
            发送数据到服务器
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="af">自定义状态回答</param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Sender(System.Byte[],System.Int32,System.String,System.String)">
            <summary>
            发送数据，指定状态
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sender">发送数据</param>
            <param name="conted">服务器返回的数值</param>
            <param name="spind">状态回答</param>
            <param name="senderobject">数据类型</param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Sender(System.Byte[])">
            <summary>
            简单的发送数据
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sender">数据包</param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.SenderFile(System.Net.Sockets.Socket,System.Net.EndPoint,ConsoleG.Network.ServerBackAs,System.IO.FileStream)">
            <summary>
            指定一个接收者发送文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.SenderFile(System.String)">
            <summary>
            指定一个接收者发送文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.SenderFile(System.IO.FileStream)">
            <summary>
            指定一个接收者发送文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.SenderFile(System.Net.Sockets.Socket,System.String)">
            <summary>
            指定一个接收者发送文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.SenderFile(System.Net.Sockets.Socket,System.IO.FileStream)">
            <summary>
            指定一个接收者发送文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)在发送文件头出现的错误，通常表示连接断开
            <para>(<see cref="T:SmProPub.SmException"/>)在发送数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceByte(System.Net.Sockets.Socket,System.Net.EndPoint)">
            <summary>
            指定一个发送者接收
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceByte(System.Net.Sockets.Socket)">
            <summary>
            指定一个发送者接收
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceByte">
            <summary>
            从服务器接收数据
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Revice(System.Byte[]@)">
            <summary>
            接收服务器消息
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="bc">可以传递的变量</param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceFile(System.Net.Sockets.Socket,System.Net.EndPoint,System.IO.FileStream)">
            <summary>
            指定一个发送者接收文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceFile(System.String)">
            <summary>
            指定一个发送者接收文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="filename">文件位置</param>
            <returns>一个文件操作位置基类</returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceFile(System.IO.FileStream)">
            <summary>
            指定一个发送者接收文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="files">一个文件操作位置基类</param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceFile(System.Net.Sockets.Socket,System.String)">
            <summary>
            指定一个发送者接收文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
            <param name="filename">文件位置</param>
            <returns>一个文件操作位置基类</returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ReviceFile(System.Net.Sockets.Socket,System.IO.FileStream)">
            <summary>
            指定一个发送者接收文件
            <para>异常:</para>(<see cref="T:SmProPub.SmException"/>)无法解析null响应头,通常表示服务断开！
            <para>(<see cref="T:SmProPub.SmException"/>)在接收数据出现的错误，通常表示连接断开</para>
            </summary>
            <param name="sp"></param>
            <param name="files">一个文件操作位置基类</param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.GetLastNoSuccess">
            <summary>
            获取最后一次没有返回200的状态(成功为null)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.AutuoRevice">
            <summary>
            自动捕获发送的数据
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.StopAutuoRevice">
            <summary>
            停止自动捕获发送的数据
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.ExceptionAdd(System.Exception)">
            <summary>
            添加错误
            </summary>
            <param name="add">错误描述</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ConsoleG.Network.NewConsoleNetCY.WaitForThisThreadAtSocket(System.Threading.Thread)" -->
        <member name="M:ConsoleG.Network.NewConsoleNetCY.GetWaitForThisThreadAtSocket">
            <summary>
            获取等待对象的线程
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.StopWaitForThisThreadAtSocket(System.Boolean)">
            <summary>
            强行结束等待此线程结束后执行任务
            </summary>
            <param name="dis">是否终止线程</param>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.GetSocketInName(System.String)">
            <summary>
            通过搜索Name值返回
            </summary>
            <param name="name">Name Text</param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.GetSocketInIDX(System.Int32)">
            <summary>
            通过搜索IDX值返回
            </summary>
            <param name="idx">IDX Number</param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Close">
            <summary>
            关闭连接(连接释放)
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.Dispose">
            <summary>
            释放关于这个的所有进程占用
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.VirtualClose">
            <summary>
            挂载连接(后台挂载)<para>关闭现有连接，但不释放，再登陆时无需登录</para>
            </summary>
        </member>
        <member name="M:ConsoleG.Network.NewConsoleNetCY.VirtualConnent">
            <summary>
            重新恢复后台连接
            </summary>
        </member>
        <member name="E:ConsoleG.Network.NewConsoleNetCY.ExceptionHappen">
            <summary>
            当有Exception引发时出现(事件为<see cref="T:ConsoleG.Network.NetWorkException"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.NewConsoleNetCY.SenderReviceStatic">
            <summary>
            发送或接收状态的事件(事件为<see cref="T:ConsoleG.Network.NewSocketABEvent"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.NewConsoleNetCY.SenderByteCY">
            <summary>
            当有服务器数据发送过来触发(sender为this)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.NewConsoleNetCY.Closed">
            <summary>
            关闭连接发生
            </summary>
        </member>
        <member name="E:ConsoleG.Network.NewConsoleNetCY.ExceptionClosed">
            <summary>
            当接收或发送出现错误时(或强制关闭时)(事件为<seealso cref="T:ConsoleG.Network.NetWorkExceptionClosed"/>)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerHeaderByte">
            <summary>
            服务器发送标头验证
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerHeaderFile">
            <summary>
            服务器发送标头文件验证
            </summary>
        </member>
        <member name="T:ConsoleG.Network.NewSocketABEvent">
            <summary>
            Event传输
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.ByteSender">
            <summary>
            每秒钟发送(接收)的长度
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.AllByte">
            <summary>
            全部总字节
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.ByteSended">
            <summary>
            已传输字节
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.SenderPres">
            <summary>
            传输百分比
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.Finish">
            <summary>
            完成传输
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.AsB">
            <summary>
            获取返回的服务器操控类
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.ASBtye">
            <summary>
            缓冲字节大小
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.ServerBackAs">
            <summary>
            处理返回结果
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewSocketABEvent.SenderRivice">
            <summary>
            是接收还是发送(<see langword="true"/>接收,<see langword="false"/>发送)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.NetWorkExceptionClosed">
            <summary>
            在发送无效指定的计划关闭
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NetWorkExceptionClosed.IPAddress">
            <summary>
            获取触发事件的连接点
            </summary>
        </member>
        <member name="T:ConsoleG.Network.NetWorkException">
            <summary>
            当错误被引发时
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NetWorkException.Exception">
            <summary>
            获取错误引发
            </summary>
        </member>
        <member name="T:ConsoleG.Network.NewWorkServerClosed">
            <summary>
            当指定用户关闭连接时
            </summary>
        </member>
        <member name="P:ConsoleG.Network.NewWorkServerClosed.IPAddress">
            <summary>
            获取触发事件的连接点
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.SendSmProForword">
            <summary>
            提供内网穿透能力
            </summary>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForword.#ctor(ConsoleG.Network.NewConsoleNetCY)">
            <summary>
            新建服务目标程序发送
            </summary>
            <param name="cy">一个客户端服务目标(不可以连接登录)</param>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.SendSmProForword.HasTask">
            <summary>
            当前有多少线程数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.SendSmProForword.FailTrush">
            <summary>
            多少次失败后报错
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.SendSmProForword.SendListSleep">
            <summary>
            等待发送列表发送
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.SendSmProForword.WeeksPackSend">
            <summary>
            周期包发送频率(单位:S)
            </summary>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForword.Connent(System.String,System.String)">
            <summary>
            连接服务端
            </summary>
            <returns>返回是否登录</returns>
            <param name="indexprogres">证书连接秘钥</param>
            <param name="unindex">指纹采集</param>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForword.AddSmProForword(System.String,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            添加映射端口
            </summary>
            <param name="localip">本地IP</param>
            <param name="localport">本地映射端口</param>
            <param name="remoteport">远程映射端口</param>
            <param name="passbyport">连接端口</param>
            <param name="recesiveByte">预留字节</param>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForword.RemoveSmProForword(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            移除映射端口
            </summary>
            <param name="passbybysore">连接端口</param>
            <param name="remoteport">远程端口</param>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForword.GetLocalSmProForword">
            <summary>
            获取所有本地映射通道端口
            </summary>
            <returns>所有<see cref="T:System.Net.Sockets.Socket"/>本地通道连接</returns>
        </member>
        <member name="E:ConsoleG.Network.SmProForword.SendSmProForword.ThreadExceptionCatch">
            <summary>
            当线程异常被触发(事件为<see cref="T:ConsoleG.Network.SmProForword.EventSmProForwordThreadException"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.SmProForword.SendSmProForword.ThreadLoaclBindConnent">
            <summary>
            当本地服务连接时(事件为<see cref="T:ConsoleG.Network.SmProForword.EventSmProForwordThreadBindConnent"/>)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.EventSmProForwordThreadException">
            <summary>
            当错误被引发时提供连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordThreadException.PassbyPort">
            <summary>
            发送通道
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordThreadException.Exception">
            <summary>
            错误类型
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.EventSmProForwordThreadBindConnent">
            <summary>
            当本地的服务器连接时
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordThreadBindConnent.PassbyPort">
            <summary>
            发送通道
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordThreadBindConnent.LocalEndPoint">
            <summary>
            服务的地址
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.SendSmProForwordServer">
            <summary>
            提供内网穿透服务器
            </summary>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForwordServer.#ctor(ConsoleG.Network.Server.NewConsoleNetSr)">
            <summary>
            新建服务目标程序发送
            </summary>
            <param name="cy">一个服务目标(不可以连接登录)</param>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.SendSmProForwordServer.SendListSleep">
            <summary>
            等待发送列表发送
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.SendSmProForwordServer.WeeksPackSend">
            <summary>
            周期包发送频率(单位:S)
            </summary>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForwordServer.Blind">
            <summary>
            建造连接<para>注意:不可以登录</para>
            </summary>
        </member>
        <member name="M:ConsoleG.Network.SmProForword.SendSmProForwordServer.UserSockets">
            <summary>
            用户建造数
            </summary>
            <returns></returns>
        </member>
        <member name="E:ConsoleG.Network.SmProForword.SendSmProForwordServer.RemotePortStatusFinish">
            <summary>
            当初始化完成时触发操作(事件为<see cref="T:ConsoleG.Network.SmProForword.EventSmProForwordSocketStatus"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.SmProForword.SendSmProForwordServer.ExceptionForword">
            <summary>
            在端口转发时产生的错误(事件为<see cref="T:ConsoleG.Network.SmProForword.EventSmProForwordException"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.SmProForword.SendSmProForwordServer.ForwordRemoteUserConnent">
            <summary>
            在用户连接指定端口转发时产生(事件为<see cref="T:ConsoleG.Network.SmProForword.EventSmProForwordUserSocketBind"/>)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.EventSmProForwordException">
            <summary>
            当错误被引发时提供连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordException.Sender">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordException.Exception">
            <summary>
            错误类型
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.EventSmProForwordUserSocketBind">
            <summary>
            当用户连接时的连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordUserSocketBind.SocketUser">
            <summary>
            用户的连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordUserSocketBind.Sender">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordUserSocketBind.RemotePort">
            <summary>
            映射端口
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordUserSocketBind.PassbyPort">
            <summary>
            映射通道
            </summary>
        </member>
        <member name="T:ConsoleG.Network.SmProForword.EventSmProForwordSocketStatus">
            <summary>
            当初始化完成时提供的连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordSocketStatus.NewConsoleNetSr">
            <summary>
            服务程序
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordSocketStatus.Sender">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordSocketStatus.RemotePort">
            <summary>
            映射端口
            </summary>
        </member>
        <member name="P:ConsoleG.Network.SmProForword.EventSmProForwordSocketStatus.PassbyPort">
            <summary>
            映射通道
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.FileDownload">
            <summary>
            向服务器下载指定文件
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.FileDownload.ObjectGetInsp">
            <summary>
            服务器接收状态
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.FileDownload.FilePathDownload">
            <summary>
            对方服务器下载文件
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.FileDownload.SavePathDirectory">
            <summary>
            保存文件夹路径
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.FileDownload.SavePath">
            <summary>
            保存的文件名
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerMent.FileDownload.Execute(ConsoleG.Network.NewConsoleNetCY,ConsoleG.Network.InShowClient.RunTServerFP)">
            <summary>
            服务器后处理服务
            </summary>
            <param name="c"></param>
            <param name="r"></param>
        </member>
        <member name="E:ConsoleG.Network.ServerMent.FileDownload.BackMessageAnys">
            <summary>
            返回消息时触发(线程操控)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.FileList">
            <summary>
            向服务器发送指定消息，返回文件List
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.FileList.Directory">
            <summary>
            获取或设置查询文件位置
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.FileList.SpDir">
            <summary>
            获取返回文件查询结果
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.ServerFileDownload">
            <summary>
            服务器下载文件
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.ServerFileDownload.BlackOm">
            <summary>
            禁止这些用户传输文件
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.ServerFileDownload.WhiteOm">
            <summary>
            只允许这些用户传输文件
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.ServerUserAdd">
            <summary>
            服务器用户添加
            </summary>
        </member>
        <member name="E:ConsoleG.Network.ServerMent.ServerUserAdd.UserAddEvent">
            <summary>
            用户被添加时操作(事件为<see cref="T:ConsoleG.Network.ServerMent.UserAddServerEvent"/>)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.UserAddServerEvent">
            <summary>
            服务器用户添加操作连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.UserAddServerEvent.UserAdd">
            <summary>
            被添加对象
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.ServerUserRemove">
            <summary>
            服务器用户移除
            </summary>
        </member>
        <member name="E:ConsoleG.Network.ServerMent.ServerUserRemove.UserRemoveEvent">
            <summary>
            用户被添加时操作(事件为<see cref="T:ConsoleG.Network.ServerMent.UserRemoveServerEvent"/>)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.UserRemoveServerEvent">
            <summary>
            服务器用户添加操作连接
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.UserRemoveServerEvent.UserRemove">
            <summary>
            被添加对象
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.SleepRevice">
            <summary>
            如果服务开启了自动接收，使用此功能可以拖缓接收状态
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.SleepRevice.Sleep">
            <summary>
            休眠秒数
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.UserAdd">
            <summary>
            操作服务器添加用户操作
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerMent.UserAdd.#ctor">
            <summary>
            新建操作目录
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.UserAdd.AddServerIn">
            <summary>
            要添加的用户
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.UserBack.GetServerUserControl">
            <summary>
            返回的用户查询
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.UserBack.GetServerLogUp">
            <summary>
            服务器登录验证
            </summary>
        </member>
        <member name="T:ConsoleG.Network.ServerMent.UserRemove">
            <summary>
            服务器用户移除
            </summary>
        </member>
        <member name="M:ConsoleG.Network.ServerMent.UserRemove.#ctor">
            <summary>
            新建目录
            </summary>
        </member>
        <member name="P:ConsoleG.Network.ServerMent.UserRemove.User">
            <summary>
            用户的标记
            </summary>
        </member>
        <member name="T:ConsoleG.Network.Server.NewConsoleNetSr">
            <summary>
            NewConsole服务器控制
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>
            配合Socket连接(服务器默认连接为TCP)
            </summary>
            <param name="addressFamily"></param>
            <param name="socketType"></param>
            <param name="protocolType"></param>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.#ctor">
            <summary>
            使用默认的连接方式(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.NewConsoleNetSr.ListernAbout">
            <summary>
            监听人数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.NewConsoleNetSr.SaveAp">
            <summary>
            保存每各人发送数据
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.NewConsoleNetSr.ServerBindAbout">
            <summary>
            服务器测试产生
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.NewConsoleNetSr.FailReset">
            <summary>
            失败重新尝试次数
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.NewConsoleNetSr.ServerCAIIndices">
            <summary>
            服务器登录验证
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.Blind">
            <summary>
            开始连接
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.StartConnentAnys">
            <summary>
            异步开始自动接纳连接者<para>问题:</para>将永远占用主发送区(事件除外)直到最后一个<see cref="T:System.Net.Sockets.Socket"/>断开
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.StopConnentAnys">
            <summary>
            停止异步开始自动接纳<para>注意:</para>即使停止，在这之前的<see cref="T:System.Net.Sockets.Socket"/>任然在此运行
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.Accept">
            <summary>
            开始接受用户申请并产生登录活动<para>注意:如果用户登录成功则返回登录用户，失败或其他因素则返回<see langword="null"/></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.Send(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.String,System.String)">
            <summary>
            指定发送者发送字节(指定状态)
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.Send(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            指定发送者发送
            </summary>
            <param name="so"></param>
            <param name="sender"></param>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.FindSocketList(System.Int32)">
            <summary>
            通过在服务器列表中查找
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.FindMoreSockList(System.Net.Sockets.Socket)">
            <summary>
            查找发送者在服务器位置
            </summary>
            <param name="sk"></param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.FindSaveServerSocketUse(System.String)">
            <summary>
            查找通过用户的登陆者
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.BackLongAllSocket">
            <summary>
            返回服务器人数
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.GetSaveServerSockets">
            <summary>
            获取服务器所有登录用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.FindSaveServerSocketSocket(System.Net.Sockets.Socket)">
            <summary>
            通过发送者查找储存
            </summary>
            <param name="sk"></param>
            <returns></returns>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.SettingSenderTitle(System.Byte[],System.Byte[])">
            <summary>
            修改发送标题<para>注意:在<see cref="M:ConsoleG.Network.Server.NewConsoleNetSr.Blind"/>后无法更改标题除非调用<see cref="M:ConsoleG.Network.Server.NewConsoleNetSr.Close"/></para>注意:更改的字节数必须为4个字节
            </summary>
            <param name="sendertitle">更改的标准数据发送标题</param>
            <param name="senderfiletitle">更改文件传输标题</param>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.Close">
            <summary>
            关闭服务器并释放连接
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.NewConsoleNetSr.Close(System.Net.Sockets.Socket)">
            <summary>
            指定关闭的人关闭连接
            </summary>
            <param name="sk"></param>
        </member>
        <member name="E:ConsoleG.Network.Server.NewConsoleNetSr.SenderByte">
            <summary>
            当有数据发送过来触发(sender为this)(事件为<see cref="T:ConsoleG.Network.Server.ServerSenderOveEvent"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.Server.NewConsoleNetSr.ExceptionClosed">
            <summary>
            当接收或发送出现错误时(或强制关闭时)(事件为<see cref="T:ConsoleG.Network.NetWorkExceptionClosed"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.Server.NewConsoleNetSr.NewSender">
            <summary>
            当有连接时触发(事件为<seealso cref="T:ConsoleG.Network.Server.ServerSenderAdd"/>)
            </summary>
        </member>
        <member name="E:ConsoleG.Network.Server.NewConsoleNetSr.Closed">
            <summary>
            关闭连接发生(事件为<see cref="T:ConsoleG.Network.NewWorkServerClosed"/>)
            </summary>
        </member>
        <member name="T:ConsoleG.Network.Server.ServerCAIIndex">
            <summary>
            提供服务器验证
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerCAIIndex.FailText">
            <summary>
            失败原因
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerCAIIndex.Success">
            <summary>
            是否执行
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerCAIIndex.FailCount">
            <summary>
            失败编号
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.ServerCAIIndex.Execute(ConsoleG.Network.Server.NewConsoleNetSr,ConsoleG.Network.InfeNewConsoleHup,ConsoleG.Network.ServerIns)">
            <summary>
            执行验证
            </summary>
            <param name="c">本体</param>
            <param name="i">连接验证</param>
            <param name="s">证书</param>
        </member>
        <member name="T:ConsoleG.Network.Server.ServerHeaderCon">
            <summary>
            服务器标头预处理
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerHeaderCon.Header">
            <summary>
            发送的标头
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerHeaderCon.ThrowException">
            <summary>
            是否触发异常(true:是(返回数据),false:否)
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerHeaderCon.Fail">
            <summary>
            是否执行不匹配
            </summary>
        </member>
        <member name="M:ConsoleG.Network.Server.ServerHeaderCon.Execute(ConsoleG.Network.NewConsoleNetCY,System.Byte[])">
            <summary>
            内容执行
            </summary>
            <param name="c">本体</param>
            <param name="headertitle">标头</param>
        </member>
        <member name="T:ConsoleG.Network.Server.ServerSenderOveEvent">
            <summary>
            处理发送的数据
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderOveEvent.SenderOver">
            <summary>
            发送的数据包
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderOveEvent.Sender">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderOveEvent.SenderList">
            <summary>
            发送者位于服务器的区块
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderOveEvent.SenderTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="T:ConsoleG.Network.Server.ServerSenderAdd">
            <summary>
            当这个IP连接登录时
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderAdd.Sender">
            <summary>
            发送者
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderAdd.LogUp">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderAdd.InsSP">
            <summary>
            它的证书
            </summary>
        </member>
        <member name="P:ConsoleG.Network.Server.ServerSenderAdd.Index">
            <summary>
            在服务器位置
            </summary>
        </member>
    </members>
</doc>
